import java.nio.file.Files

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply from: '../dependencies.gradle'

kapt {
    correctErrorTypes = true
    useBuildCache = true
}

android {

    compileSdkVersion androidCompileSdkVersion

    defaultConfig {
        applicationId "com"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        multiDexEnabled true
        buildConfigField("String", "APP_KEY", API_KEY)
        buildConfigField("String", "API_KEY_PIXABAY", API_KEY_PIXA_BAY)
        buildConfigField("String", "JSON_VERSION", '"v3"')
        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "app"

    productFlavors {

        accountOne {
            applicationIdSuffix = ".sami.rippel.allah"
            dimension "app"
            versionCode 92
            versionName "9.2"
            buildConfigField("String", "APP_INTERSTITIAL_KEY", "\"ca-app-pub-6263632629106733/3118481881\"")
            manifestPlaceholders = [hostName: "ca-app-pub-6263632629106733~1726613607"]
        }

        accountTwo {
            applicationIdSuffix = ".liliagame.scarewhotouchme"
            dimension "app"
            resourceConfigurations += ['ar', 'xxhdpi']
            versionCode 30
            versionName "3.0"
            buildConfigField("String", "APP_INTERSTITIAL_KEY", "\"ca-app-pub-6263632629106733/3118481881\"")
            manifestPlaceholders = [hostName: "ca-app-pub-6263632629106733~4067989099"]
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/ASL2.0', 'META-INF/LICENSE', 'META-INF/NOTICE', 'LICENSE.txt', 'META-INF/LICENSE.txt', 'META-INF/NOTICE.txt', 'META-INF/MANIFEST.MF']
        }
    }


    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding = true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion composeCompiler
    }
    namespace 'com.yassin.wallpaper'
    lint {
        abortOnError false
        checkDependencies true
        checkReleaseBuilds false
        disable 'StringFormatMatches', 'Instantiatable'
        ignoreTestSources true
    }
}


dependencies {
    kapt Libs.hilt.hiltAndroidComplier
    kapt Libs.hilt.hiltComplier
    implementation Libs.kotlin.coroutinesAndroid
    implementation Libs.navigation.fragmentNavktx
    implementation Libs.navigation.navigationKtx
    implementation Libs.hilt.hiltLib
    implementation Libs.androidx.appcompat
    implementation Libs.androidx.multidex
    implementation Libs.androidx.recyclerview
    implementation Libs.androidx.constraintlayout
    implementation Libs.retrofit.retrofit
    implementation Libs.google.material
    implementation Libs.google.servicesAds
    implementation Libs.google.core
    implementation Libs.google.coreKtx
    implementation Libs.google.messagingPlatform
    implementation Libs.glide.glide
    implementation Libs.google.firebaseAnalytics
    implementation Libs.google.firebaseCrashlytics
    implementation Libs.debugging.timber

    implementation Libs.compose.composeUi
    implementation Libs.compose.composeMaterial
    debugImplementation  Libs.compose.composeUiTooling
    implementation Libs.compose.toolingPreview
    implementation Libs.compose.layout
    implementation Libs.compose.navigation
    implementation Libs.compose.navAnimation
    implementation Libs.compose.coil
    implementation Libs.compose.icon

    implementation project(':download-file-module')
    implementation project(':base-android')
    implementation project(':ui-detail')
    implementation project(':ui-sky-rajawali-lwp')
    implementation project(':ui-anim-img-lwp')
    implementation project(':ui-anim-word-lwp')
    implementation project(':ui-timer-lwp')
    implementation project(':ui-list')
    implementation project(':data-android')
}

android.applicationVariants.all { variant ->
    def name = variant.getName()
    buildConfigField "boolean", "enableDebugLogging", "false"
    if (name.contains("accountOne")) {
        def googleServices = file("src/accountOne/google-services.json")
        if (!googleServices.exists()) {
            Files.copy(file("src/accountOne/fake-ripple-google-services.json").toPath(), googleServices.toPath())
        }
    }
    if (name.contains("accountTwo")) {
        def googleServices = file("src/accountTwo/google-services.json")
        if (!googleServices.exists()) {
            Files.copy(file("src/accountTwo/fake-scary-google-services.json").toPath(), googleServices.toPath())
        }
    }
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
